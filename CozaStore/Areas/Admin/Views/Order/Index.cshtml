@model PagedList<Order>
@section Styles {
    <link rel="stylesheet" href="~/sweetalert2/sweetalert2.min.css" />
}
<content>
    <h3 class="mb-3 text-primary">List Order</h3>
    <div class="row">
        <div class="col-6">
            <a class="btn btn-light text-white" style="background-color: #157347">
                <i class="fa-sharp fa-solid fa-file-export"></i> Excel
            </a>
        </div>
        <div class="col-6 text-end">
            <form method="get" asp-controller="order" asp-action="Index">
                <div class="d-flex gap-2">
                    <input type="text" name="searchString" class="form-control"
                           placeholder="Enter name, phone, id of order"
                           value="@ViewData["searchString"]" />
                    <button type="submit" style="width: 48px;" class="rounded btn btn-outline-dark p-0">
                        <i class="fa-regular fa-magnifying-glass"></i>
                    </button>
                    <a asp-controller="order" asp-action="Index" style="width: 48px;" class="rounded btn btn-info px-0">
                        <i class="fa-sharp fa-regular fa-arrow-rotate-right"></i>
                    </a>
                </div>

            </form>
        </div>
    </div>

    <div class="table-responsive text-nowrap mt-3">
        <table class="table">
            <thead>
                <tr class="fw-bold">
                    <td style="width: 5%;">ID</td>
                    <td>Name</td>
                    <td>Shipping method</td>
                    <td>Payment</td>
                    <td>Status</td>
                    <td>Total</td>
                    <td>Actions</td>
                </tr>
            </thead>
            <tbody class="align-middle table-border-bottom-0">
                @if (Model != null)
                {
                    @foreach (var order in Model)
                    {
                        <tr>
                            <td>@order.Id</td>
                            <td>@order.FullName</td>
                            <td>@order.ShippingMethod.Name</td>
                            <td>
                                <span class="
                                     @(order.PaymentStatus == (int)PaymentStatus.Paid ? "text-info" : "text-secondary")">
                                    @(order.PaymentStatus == (int)PaymentStatus.Paid ? Html.Raw("<i class='fa-regular fa-check'></i>") : Html.Raw("<i class='fa-sharp fa-regular fa-clock-three'></i>"))
                                </span>
                            </td>

                            <td>
                                <span class="badge
                                    @(order.OrderStatus == (int)OrderStatus.Unconfirmed ? "bg-warning" :
                                      order.OrderStatus == (int)OrderStatus.Confirmed ? "bg-success" : "bg-danger")">
                                    @(order.OrderStatus == (int)OrderStatus.Unconfirmed ? OrderStatus.Unconfirmed :
                                        order.OrderStatus == (int)OrderStatus.Confirmed ? OrderStatus.Confirmed : OrderStatus.Canceled)
                                </span>
                            </td>

                            <td>$@order.GetTotal()</td>
                            <td class="text-white">
                                
                                <a href="/admin/products/edit/${row.id}" class="btn btn-sm btn-info">
                                        <i class="fa fa-pencil-alt"></i>
                                    </a>
                                    <button type="button" data-id="${row.id}" class="btn btn-sm btn-danger">
                                    <i class="fa-solid fa-trash-can"></i>
                                    </button>
                                


                            </td>
                        </tr>
                    }
                }

            </tbody>
        </table>
    </div>
    @if (Model != null)
    {
        @* paging *@

        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
        var firstDisabled = Model.PageIndex <= 1 ? "disabled" : "";
        var lastDisabled = Model.PageIndex == Model.TotalPages ? "disabled" : "";


        <div class="row mt-3">
            <ul class="pagination justify-content-center">
                <li class="mx-1 page-item @firstDisabled" >
                    <a class="rounded page-link"
                       asp-route-searchString="@ViewData["searchString"]"
                       asp-route-page="1">
                        <span>First</span>
                    </a>
                </li>
                <li class="mx-1 page-item @prevDisabled">
                    <a class="rounded page-link"
                       asp-route-searchString="@ViewData["searchString"]"
                       asp-route-page="@(Model.PageIndex - 1)">
                        <i class="fa-regular fa-chevron-left"></i>
                    </a>
                </li>
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="mx-1 page-item">
                        <a class="rounded page-link @(Model.PageIndex == i ? "active" : "")"
                           asp-route-searchString="@ViewData["searchString"]"
                           asp-route-page="@(i)"
                           data-page="@(i)"> @i</a>
                    </li>
                }
                <li class="mx-1 page-item @nextDisabled">
                    <a class="rounded page-link"
                       asp-route-searchString="@ViewData["searchString"]"
                       asp-route-page="@(Model.PageIndex + 1)">
                        <i class="fa-regular fa-chevron-right"></i>
                    </a>
                </li>
                <li class="mx-1 page-item @lastDisabled">
                    <a class="rounded page-link"
                       asp-route-searchString="@ViewData["searchString"]"
                       asp-route-page="@(Model.TotalPages)">
                        <span>Last</span>
                    </a>
                </li>
            </ul>
        </div>
    }
</content>


@section Scripts {
    <script src="~/sweetalert2/sweetalert2.min.js"></script>
        

    <script>
        $(document).ready(function () {
            // Get the current page from the URL
            const urlParams = new URLSearchParams(window.location.search);
            const currentPage = urlParams.get('page') || 1;

            // Remove 'active' class from all page items
            $('.pagination .page-item').removeClass('active');

            // Find the page item with the matching data-page attribute and add the 'active' class
            $('.pagination .page-link').each(function () {
                if ($(this).data('page') == currentPage) {
                    $(this).closest('.page-item').addClass('active');
                }
            });
        });

        function DeleteColor(url) {
            Swal.fire({
                title: 'Are you sure?',
                // text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: url,
                        type: 'post',
                        success: function () {
                            window.location.reload();
                        }
                    })
                }
            })
        }

        function RevertColor(url) {
            Swal.fire({
                title: 'Are you sure?',
                // text: "You won't be able to revert this!",
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, revert it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: url,
                        type: 'post',
                        success: function () {
                            window.location.reload();
                        }
                    })
                }
            })
        }

    </script>
}