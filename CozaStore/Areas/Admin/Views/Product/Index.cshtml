@model ProductVM

@section Styles {
    <link rel="stylesheet" href="~/lib/select2/css/select2.min.css" />
    <link rel="stylesheet" href="~/css/custom-select2.css" />
    <link rel="stylesheet" href="~/sweetalert2/sweetalert2.min.css" />
}

<content>
    <div class="row mb-3">
        <div class="col-6">
            <h3 class="mb-3">List product</h3>
        </div>

        <div class="col-6 text-end">
            <a asp-controller="product" asp-action="create" class="btn btn-primary">
                Create
            </a>
        </div>

    </div>
    <form method="get" asp-controller="product" asp-action="Index">
        <div class="row mb-2">
            <div class="col-12">

                <div class="d-flex gap-2">
                    <input type="text" name="searchString" class="form-control"
                           placeholder="Enter product name or id"
                           value="@Model.CurrentFilter" />
                    <button type="submit" style="width: 48px;" class="rounded btn btn-outline-dark p-0">
                        <i class="fa-solid fa-magnifying-glass"></i>
                    </button>
                    <a asp-controller="product" asp-action="Index" style="width: 48px;" class="rounded btn btn-info px-0">
                        <i class="fa-solid fa-arrows-rotate"></i>
                    </a>
                </div>

            </div>
        </div>


        <div class="row mt-2 g-2">
            <div class="col-12 col-md">
                <select asp-for="SelectedCategory" class="form-select">
                    <option disabled selected>Category</option>
                    @foreach (var category in Model.CategoryList)
                    {
                        <option value="@category.Id">@category.Name</option>
                    }
                </select>
            </div>

            <div class="col-12 col-md">
                <select asp-for="SelectedSize" class="form-select">
                    <option disabled selected>Size</option>
                    @foreach (var size in Model.SizeList)
                    {
                        <option value="@size.Id">@size.Name</option>
                    }
                </select>
            </div>

            <div class="col-12 col-md">
                <select asp-for="SelectedColor" class="form-select">
                    <option value="" disabled selected>Color</option>
                    @foreach (var color in Model.ColorList)
                    {
                        <option value="@color.Id" data-color="@color.Name">@color.Name</option>
                    }
                </select>
            </div>

            <div class="col-12 col-md">
                <select asp-for="SelectedPriceRange" class="form-select">
                    <option disabled selected>Price</option>
                    @foreach (var price in Model.PriceRangeList)
                    {
                        <option value="@price">@price</option>
                    }
                </select>
            </div>

            <div class="col-12 col-md">
                <button type="submit" class="btn btn-primary">Apply Filter</button>
            </div>
        </div>
    </form>





    <div class="table-responsive text-nowrap mt-3">
        <table class="table">
            <thead>
                <tr class="fw-bold">
                    <td>
                        <a asp-action="Index" asp-route-sortOrder="@Model.IdSortParm"
                           asp-route-searchString="@Model.CurrentFilter"
                           asp-route-selectedPriceRange="@Model.SelectedPriceRange"
                           asp-route-selectedColor="@Model.SelectedColor"
                           asp-route-selectedSize="@Model.SelectedSize"
                           asp-route-SelectedCategoryString="@string.Join(",", Model.SelectedCategory)">ID</a>
                    </td>
                    <td>Image</td>
                    <td style="width: 40%">
                        <a asp-action="Index" asp-route-sortOrder="@Model.NameSortParm"
                           asp-route-searchString="@Model.CurrentFilter"
                           asp-route-selectedPriceRange="@Model.SelectedPriceRange"
                           asp-route-selectedColor="@Model.SelectedColor"
                           asp-route-selectedSize="@Model.SelectedSize"
                           asp-route-SelectedCategoryString="@string.Join(",", Model.SelectedCategory)">Name</a>
                    </td>
                    <td>
                        <a asp-action="Index" asp-route-sortOrder="@Model.PriceSortParm"
                           asp-route-searchString="@Model.CurrentFilter"
                           asp-route-selectedPriceRange="@Model.SelectedPriceRange"
                           asp-route-selectedColor="@Model.SelectedColor"
                           asp-route-selectedSize="@Model.SelectedSize"
                           asp-route-SelectedCategoryString="@string.Join(",", Model.SelectedCategory)">Price</a>
                    </td>
                    <td>
                        <a asp-action="Index" asp-route-sortOrder="@Model.StatusSortParm"
                           asp-route-searchString="@Model.CurrentFilter"
                           asp-route-selectedPriceRange="@Model.SelectedPriceRange"
                           asp-route-selectedColor="@Model.SelectedColor"
                           asp-route-selectedSize="@Model.SelectedSize"
                           asp-route-SelectedCategoryString="@string.Join(",", Model.SelectedCategory)">Status</a>
                    </td>
                    <td>Actions</td>
                </tr>
            </thead>
            <tbody class="align-middle table-border-bottom-0">
                @if (Model != null)
                {
                    @foreach (var product in Model.Products)
                    {
                        <tr>
                            <td>@product.Id</td>
                            <td>
                                <img src="@product.Images.Where(x=> x.ProductId == product.Id).OrderByDescending(x => x.IsMain).FirstOrDefault()?.Url" style="max-width: 120px; object-fit: cover;" />
                            </td>
                            <td>
                                <div>@product.Name</div>
                            </td>
                            <td>@product.Price</td>
                            @if (product.Status == (int)ProductStatus.Deleted)
                            {
                                <td>
                                    <span class="badge bg-label-danger me-1">@ProductStatus.Deleted</span>
                                </td>

                                <td style="color: #fff">
                                    <a asp-controller="product" asp-action="detail" asp-route-id="@product.Id" class="btn btn-secondary mx-1">
                                        Detail
                                    </a>
                                    <a asp-controller="product" asp-action="edit" asp-route-id="@product.Id" class="btn btn-warning mx-1">
                                        Edit
                                    </a>
                                    <a onclick="RecoverProduct('/admin/product/toggleproductstatus/?productId=@product.Id')"
                                       class="btn btn-info mx-1">
                                        Revert
                                    </a>
                                </td>
                            }
                            else if (product.Status == (int)ProductStatus.Public)
                            {
                                <td>
                                    <span class="badge bg-label-primary me-1">@ProductStatus.Public</span>
                                </td>

                                <td style="color: #fff">
                                    <a asp-controller="product" asp-action="detail" asp-route-id="@product.Id" class="btn btn-secondary mx-1">
                                        Detail
                                    </a>
                                    <a asp-controller="product" asp-action="edit" asp-route-id="@product.Id" class="btn btn-warning mx-1">
                                        Edit
                                    </a>
                                    <a onclick="DeleteProduct('/admin/product/toggleproductstatus/?productId=@product.Id')"
                                       class="btn btn-danger mx-1">
                                        Delete
                                    </a>
                                </td>
                            }
                            else if (product.Status == (int)ProductStatus.Private)
                            {
                                <td>
                                    <span class="badge bg-label-warning me-1">@ProductStatus.Private</span>
                                </td>

                                <td style="color: #fff">
                                    <a asp-controller="product" asp-action="detail" asp-route-id="@product.Id" class="btn btn-secondary mx-1">
                                        Detail
                                    </a>
                                    <a asp-controller="product" asp-action="edit" asp-route-id="@product.Id" class="btn btn-warning mx-1">
                                        Edit
                                    </a>
                                    <a onclick="DeleteProduct('/admin/product/toggleproductstatus/?productId=@product.Id')"
                                       class="btn btn-danger mx-1">
                                        Delete
                                    </a>
                                </td>
                            }
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
    @if (Model.Products != null)
    {
        @* paging *@

        var prevDisabled = !Model.Products.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.Products.HasNextPage ? "disabled" : "";
        var firstDisabled = Model.Products.PageIndex <= 1 ? "disabled" : "";
        var lastDisabled = Model.Products.PageIndex == Model.Products.TotalPages ? "disabled" : "";


        <div class="row mt-3">
            <ul class="pagination justify-content-center">
                <li class="mx-1 page-item @firstDisabled">
                    <a class="rounded page-link"
                       asp-route-sortOrder="@Model.CurrentSort" asp-route-searchString="@Model.CurrentFilter"
                       asp-route-selectedPriceRange="@Model.SelectedPriceRange"
                       asp-route-selectedColor="@Model.SelectedColor"
                       asp-route-selectedSize="@Model.SelectedSize"
                       asp-route-SelectedCategoryString="@string.Join(",", Model.SelectedCategory)"
                       asp-route-page="1">
                        <span>First</span>
                    </a>
                </li>
                <li class="mx-1 page-item @prevDisabled">
                    <a class="rounded page-link"
                       asp-route-sortOrder="@Model.CurrentSort" asp-route-searchString="@Model.CurrentFilter"
                       asp-route-selectedPriceRange="@Model.SelectedPriceRange"
                       asp-route-selectedColor="@Model.SelectedColor"
                       asp-route-selectedSize="@Model.SelectedSize"
                       asp-route-SelectedCategoryString="@string.Join(",", Model.SelectedCategory)"
                       asp-route-page="@(Model.Products.PageIndex - 1)">
                        <i class="fa-solid fa-chevron-left"></i>
                    </a>
                </li>
                @for (int i = 1; i <= Model.Products.TotalPages; i++)
                {
                    <li class="mx-1 page-item">
                        <a class="rounded page-link @(Model.Products.PageIndex == i ? "active" : "")"
                           asp-route-sortOrder="@Model.CurrentSort" asp-route-searchString="@Model.CurrentFilter"
                           asp-route-selectedPriceRange="@Model.SelectedPriceRange"
                           asp-route-selectedColor="@Model.SelectedColor"
                           asp-route-selectedSize="@Model.SelectedSize"
                           asp-route-SelectedCategoryString="@string.Join(",", Model.SelectedCategory)"
                           asp-route-page="@(i)"> @i</a>
                    </li>
                }
                <li class="mx-1 page-item @nextDisabled">
                    <a class="rounded page-link"
                       asp-route-sortOrder="@Model.CurrentSort" asp-route-searchString="@Model.CurrentFilter"
                       asp-route-selectedPriceRange="@Model.SelectedPriceRange"
                       asp-route-selectedColor="@Model.SelectedColor"
                       asp-route-selectedSize="@Model.SelectedSize"
                       asp-route-SelectedCategoryString="@string.Join(",", Model.SelectedCategory)"
                       asp-route-page="@(Model.Products.PageIndex + 1)">
                        <i class="fa-solid fa-chevron-right"></i>
                    </a>
                </li>
                <li class="mx-1 page-item @lastDisabled">
                    <a class="rounded page-link"
                       asp-route-sortOrder="@Model.CurrentSort" asp-route-searchString="@Model.CurrentFilter"
                       asp-route-selectedPriceRange="@Model.SelectedPriceRange"
                       asp-route-selectedColor="@Model.SelectedColor"
                       asp-route-selectedSize="@Model.SelectedSize"
                       asp-route-SelectedCategoryString="@string.Join(",", Model.SelectedCategory)"
                       asp-route-page="@(Model.Products.TotalPages)">
                        <span>Last</span>
                    </a>
                </li>
            </ul>
        </div>
    }


</content>



@section Scripts {
    <script src="~/lib/select2/js/select2.min.js"></script>
    <script src="~/sweetalert2/sweetalert2.min.js"></script>

    <script>
        $(document).ready(function () {
            // Initialize Select2
            $('#SelectedSize').select2();
            $('#SelectedCategory').select2();
            $('#SelectedStatus').select2();
            $('#SelectedPriceRange').select2();

            $('#SelectedColor').select2({
                templateResult: formatState,
                templateSelection: formatState
            });

            //custom select color
            function formatState(state) {
                if (!state.id) {
                    return state.text;
                }
                var $state = $(
                    '<span class="d-flex gap-2 align-items-center"><div class="color-box" style="width:20px; height: 20px; display: inline-block; background-color: ' + $(state.element).data('color') + ';"></div>' + state.text + '</span>'
                );
                return $state;
            }
        });
        function DeleteProduct(url) {
            Swal.fire({
                title: 'Are you sure?',
                // text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: url,
                        type: 'post',
                        success: function () {
                            window.location.reload();
                        }
                    })
                }
            })
        }

        function RecoverProduct(url) {
            Swal.fire({
                title: 'Are you sure?',
                // text: "You won't be able to revert this!",
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, recover it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: url,
                        type: 'post',
                        success: function () {
                            window.location.reload();
                        }
                    })
                }
            })
        }

    </script>
}