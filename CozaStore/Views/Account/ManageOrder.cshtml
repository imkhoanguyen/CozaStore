@model OrderVM
@section Styles {
    <link rel="stylesheet" href="~/sweetalert2/sweetalert2.min.css" />
    <link rel="stylesheet" href="~/lib/select2/css/select2.min.css" />
    <link rel="stylesheet" href="~/css/custom-select2.css" />
}
<section class="bg0 m-t-23 p-b-140">
    <h1 class="text-center m-5 fw-bold text-uppercase">Order management</h1>
    <main class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-12">
                    <div class="card">
                        <div class="card-header fw-bold text-uppercase">
                            Order List
                        </div>
                        <div class="card-body">
                            <form method="get" asp-controller="order" asp-action="index" class="row">
                                <div class="col-6">
                                    <div class="d-flex gap-2">
                                        <input name="PageSize" class="form-control" value="@Model.OrderList.PageSize" style="max-width: 50px;" data-val="false" />
                                        <a class="btn btn-primary" onclick="toggleFillterContainer()">
                                            <i class="fa-sharp fa-solid fa-filter"></i> Filter
                                        </a>
                                    </div>
                                </div>
                                <div class="col-6 text-end">
                                    <div class="d-flex gap-2">
                                        <input type="text" name="SearchString" class="form-control"
                                               placeholder="Enter name, phone, address, id of Order"
                                               value="@Model.CurrentFilter" />
                                        <button type="submit" style="width: 48px;" class="rounded btn btn-outline-dark p-0">
                                            <i class="fa-regular fa-magnifying-glass"></i>
                                        </button>
                                        <a asp-controller="order" asp-action="index" style="width: 48px;" class="rounded btn btn-outline-dark px-0">
                                            <i class="fa-sharp fa-regular fa-arrow-rotate-right"></i>
                                        </a>
                                    </div>
                                </div>

                                <div class="collapse row mt-2 pe-0 box-shadow" id="filterContainer">
                                    <div class="col-12 pe-0">
                                        <div class="card card-body">
                                            <div class="row g-2 mb-2">
                                                <div class="col-12 col-md">
                                                    <select class="form-select" asp-for="SelectedShipping" data-val="false">
                                                        <option disabled selected>Shipping</option>
                                                        @foreach (var shipping in Model.ShippingList)
                                                        {
                                                            <option value="@shipping.Id">@shipping.Name</option>
                                                        }
                                                    </select>
                                                </div>
                                                <div class="col-12 col-md">
                                                    <select class="form-select" asp-for="SelectedPayment" style="width: 100%;" data-val="false">
                                                        <option selected disabled>Payment</option>
                                                        @foreach (var paymentStatus in Model.PaymentStatusList)
                                                        {
                                                            <option value="@paymentStatus.Id" data-style="@paymentStatus.Name">@paymentStatus.Name</option>
                                                        }
                                                    </select>
                                                </div>
                                                <div class="col-12 col-md">
                                                    <select class="form-select" asp-for="SelectedStatus" style="width: 100%;" data-val="false">
                                                        <option selected disabled>Status</option>
                                                        @foreach (var status in Model.StatusList)
                                                        {
                                                            <option value="@status.Id" data-style="@status.Name">@status.Name</option>
                                                        }
                                                    </select>
                                                </div>
                                            </div>
                                            <div class="row mb-2 g-2">
                                                <div class="col-12 col-md">
                                                    <div class="input-group">
                                                        <input class="form-control" asp-for="DateStart" data-val="false">
                                                        <span class="input-group-text px-3 mx-0" style="background-color: #f7f7f7;">
                                                            <i class="fa-sharp fa-solid fa-arrow-right"></i>
                                                        </span>
                                                        <input class="form-control" asp-for="DateEnd" data-val="false">
                                                    </div>
                                                </div>

                                                <div class="col-12 col-md">
                                                    <div class="input-group">
                                                        <input type="text" class="form-control" placeholder="Price min" asp-for="PriceMin" />
                                                        <span class="input-group-text px-3 mx-0" style="background-color: #f7f7f7;">
                                                            <i class="fa-sharp fa-solid fa-arrow-right"></i>
                                                        </span>
                                                        <input type="text" class="form-control" placeholder="Price max" asp-for="PriceMax" />
                                                    </div>
                                                    <span class="text-danger" asp-validation-for="PriceMax"></span>
                                                    <span class="text-danger" asp-validation-for="PriceMin"></span>
                                                </div>


                                            </div>
                                            <div class="text-end">
                                                <button type="submit" class="btn btn-primary">Apply</button>
                                            </div>
                                        </div>
                                    </div>

                                </div>


                            </form>

                            <div class="table-responsive mt-3">
                                <table class="table">
                                    <thead>
                                        <tr class="fw-bold">
                                            <td style="width: 5%;">
                                                <a style="text-decoration: none;" asp-action="Index" asp-route-sortOrder="@Model.IdSortParm"
                                                   asp-route-SearchString="@Model.CurrentFilter"
                                                   asp-route-SelectedShipping="@Model.SelectedShipping"
                                                   asp-route-SelectedPayment="@Model.SelectedPayment"
                                                   asp-route-SelectedStatus="@Model.SelectedStatus"
                                                   asp-route-DateStart="@Model.DateStart"
                                                   asp-route-DateEnd="@Model.DateEnd"
                                                   asp-route-PriceMin="@Model.PriceMin"
                                                   asp-route-PriceMax="@Model.PriceMax"
                                                   asp-route-PageSize="@Model.OrderList.PageSize">ID</a>
                                            </td>
                                            <td>Name</td>
                                            <td>Shipping</td>
                                            <td>Payment</td>
                                            <td>Time</td>
                                            <td>Status</td>
                                            <td>
                                                <a style="text-decoration: none;" asp-action="Index" asp-route-sortOrder="@Model.TotalSortParm"
                                                   asp-route-SearchString="@Model.CurrentFilter"
                                                   asp-route-SelectedShipping="@Model.SelectedShipping"
                                                   asp-route-SelectedPayment="@Model.SelectedPayment"
                                                   asp-route-SelectedStatus="@Model.SelectedStatus"
                                                   asp-route-DateStart="@Model.DateStart"
                                                   asp-route-DateEnd="@Model.DateEnd"
                                                   asp-route-PriceMin="@Model.PriceMin"
                                                   asp-route-PriceMax="@Model.PriceMax"
                                                   asp-route-PageSize="@Model.OrderList.PageSize">Total</a>
                                            </td>
                                            <td style="width: 10%;">Actions</td>
                                        </tr>
                                    </thead>
                                    <tbody class="align-middle table-border-bottom-0">
                                        @if (Model != null)
                                        {
                                            @foreach (var order in Model.OrderList)
                                            {
                                                <tr data-order-id="@order.Id">
                                                    <td>@order.Id</td>
                                                    <td>@order.FullName</td>
                                                    <td>@order.ShippingMethod.Name</td>
                                                    <td>
                                                        <span class="
                                     @(order.PaymentStatus == (int)PaymentStatus.Paid ? "text-primary" : "text-secondary")">
                                                            @(order.PaymentStatus == (int)PaymentStatus.Paid ? Html.Raw("<i class='fa-regular fa-check'></i> Paid") : Html.Raw("<i class='fa-sharp fa-regular fa-clock-three'></i> Pending"))
                                                        </span>
                                                    </td>
                                                    <td>@order.OrderDate.ToString("dd/MM/yyyy hh:mm:ss tt")</td>
                                                    <td>
                                                        <span class="badge
                                    @(order.OrderStatus == (int)OrderStatus.Unconfirmed ? "bg-warning" :
                                      order.OrderStatus == (int)OrderStatus.Confirmed ? "bg-primary" : "bg-danger")">
                                                            @(order.OrderStatus == (int)OrderStatus.Unconfirmed ? OrderStatus.Unconfirmed :
                                                                order.OrderStatus == (int)OrderStatus.Confirmed ? OrderStatus.Confirmed : OrderStatus.Canceled)
                                                        </span>
                                                    </td>

                                                    <td class="fw-bold">$@order.GetTotal()</td>
                                                    <td>
                                                        <div class="d-flex gap-2">
                                                            <a asp-controller="account" asp-action="orderdetail" asp-route-orderId="@order.Id" class="btn btn-sm btn-primary">
                                                                <i class="fa-sharp fa-solid fa-eye"></i>
                                                            </a>
                                                            <button type="button" onclick="Delete(this,'/admin/order/delete/?orderId=@order.Id');" class="btn btn-sm btn-danger">
                                                                <i class="fa-solid fa-trash-can"></i>
                                                            </button>
                                                        </div>

                                                    </td>
                                                </tr>
                                            }
                                        }

                                    </tbody>
                                </table>
                            </div>
                            @if (Model != null)
                            {
                                @* paging *@

                                var prevDisabled = !Model.OrderList.HasPreviousPage ? "disabled" : "";
                                var nextDisabled = !Model.OrderList.HasNextPage ? "disabled" : "";
                                var firstDisabled = Model.OrderList.PageIndex <= 1 ? "disabled" : "";
                                var lastDisabled = Model.OrderList.PageIndex == Model.OrderList.TotalPages ? "disabled" : "";


                                <div class="row mt-3">
                                    <ul class="pagination justify-content-center">
                                        <li class="mx-1 page-item @firstDisabled">
                                            <a class="rounded page-link"
                                               asp-route-SearchString="@Model.CurrentFilter"
                                               asp-route-SelectedShipping="@Model.SelectedShipping"
                                               asp-route-SelectedPayment="@Model.SelectedPayment"
                                               asp-route-SelectedStatus="@Model.SelectedStatus"
                                               asp-route-DateStart="@Model.DateStart"
                                               asp-route-DateEnd="@Model.DateEnd"
                                               asp-route-PriceMin="@Model.PriceMin"
                                               asp-route-PriceMax="@Model.PriceMax"
                                               asp-route-PageNumber="1"
                                               asp-route-PageSize="@Model.OrderList.PageSize">
                                                <span>First</span>
                                            </a>
                                        </li>
                                        <li class="mx-1 page-item @prevDisabled">
                                            <a class="rounded page-link"
                                               asp-route-SearchString="@Model.CurrentFilter"
                                               asp-route-SelectedShipping="@Model.SelectedShipping"
                                               asp-route-SelectedPayment="@Model.SelectedPayment"
                                               asp-route-SelectedStatus="@Model.SelectedStatus"
                                               asp-route-DateStart="@Model.DateStart"
                                               asp-route-DateEnd="@Model.DateEnd"
                                               asp-route-PriceMin="@Model.PriceMin"
                                               asp-route-PriceMax="@Model.PriceMax"
                                               asp-route-PageNumber="@(Model.OrderList.PageIndex - 1)"
                                               asp-route-PageSize="@Model.OrderList.PageSize">
                                                <i class="fa-regular fa-chevron-left"></i>
                                            </a>
                                        </li>
                                        @for (int i = 1; i <= Model.OrderList.TotalPages; i++)
                                        {
                                            <li class="mx-1 page-item">
                                                <a class="rounded page-link @(Model.OrderList.PageIndex == i ? "active" : "")"
                                                   asp-route-SearchString="@Model.CurrentFilter"
                                                   asp-route-SelectedShipping="@Model.SelectedShipping"
                                                   asp-route-SelectedPayment="@Model.SelectedPayment"
                                                   asp-route-SelectedStatus="@Model.SelectedStatus"
                                                   asp-route-DateStart="@Model.DateStart"
                                                   asp-route-DateEnd="@Model.DateEnd"
                                                   asp-route-PriceMin="@Model.PriceMin"
                                                   asp-route-PriceMax="@Model.PriceMax"
                                                   asp-route-PageNumber="@(i)"
                                                   asp-route-PageSize="@Model.OrderList.PageSize"
                                                   data-page="@(i)">@i</a>
                                            </li>
                                        }
                                        <li class="mx-1 page-item @nextDisabled">
                                            <a class="rounded page-link"
                                               asp-route-SearchString="@Model.CurrentFilter"
                                               asp-route-SelectedShipping="@Model.SelectedShipping"
                                               asp-route-SelectedPayment="@Model.SelectedPayment"
                                               asp-route-SelectedStatus="@Model.SelectedStatus"
                                               asp-route-DateStart="@Model.DateStart"
                                               asp-route-DateEnd="@Model.DateEnd"
                                               asp-route-PriceMin="@Model.PriceMin"
                                               asp-route-PriceMax="@Model.PriceMax"
                                               asp-route-PageNumber="@(Model.OrderList.PageIndex + 1)"
                                               asp-route-PageSize="@Model.OrderList.PageSize">
                                                <i class="fa-regular fa-chevron-right"></i>
                                            </a>
                                        </li>
                                        <li class="mx-1 page-item @lastDisabled">
                                            <a class="rounded page-link"
                                               asp-route-SearchString="@Model.CurrentFilter"
                                               asp-route-SelectedShipping="@Model.SelectedShipping"
                                               asp-route-SelectedPayment="@Model.SelectedPayment"
                                               asp-route-SelectedStatus="@Model.SelectedStatus"
                                               asp-route-DateStart="@Model.DateStart"
                                               asp-route-DateEnd="@Model.DateEnd"
                                               asp-route-PriceMin="@Model.PriceMin"
                                               asp-route-PriceMax="@Model.PriceMax"
                                               asp-route-PageNumber="@(Model.OrderList.TotalPages)"
                                               asp-route-PageSize="@Model.OrderList.PageSize">
                                                <span>Last</span>
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </main>
</section>


@section Scripts {

    <script src="~/sweetalert2/sweetalert2.min.js"></script>
    <script src="~/js/paging.js"></script>
    <script src="~/lib/select2/js/select2.min.js"></script>
    <script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>
    @{
        <partial name="_ValidationScriptsPartial" />
    }

    <script>

        var connectionOrder = new signalR.HubConnectionBuilder().withUrl("/hubs/order").build();

        function updateOrderStatusConfirm(orderId) {
            let row = document.querySelector(`tr[data-order-id='${orderId}']`);

            if (row) {
                let orderCell = row.querySelector("td:nth-child(6) span");

                orderCell.classList.remove("bg-warning");
                orderCell.classList.add("bg-primary");
                orderCell.innerHTML = "Confirmed";
            }
        }

        function updatePaymentStatusSuccess(orderId) {
            let row = document.querySelector(`tr[data-order-id='${orderId}']`);

            if (row) {
                let paymentCell = row.querySelector("td:nth-child(4) span");

                paymentCell.classList.remove("text-secondary");
                paymentCell.classList.add("text-primary");
                paymentCell.innerHTML = "<i class='fa-regular fa-check'></i> Paid";
            }
        }

        connectionOrder.on("ConfirmOrder", (id) => {
            toastr.success("Order was confirmed");
            updateOrderStatusConfirm(id);
        });

        connectionOrder.on("PaymentSuccess", (orderId) => {
            toastr.success("Order #" + orderId + " was paid");
            updatePaymentStatusSuccess(orderId);
        });

        connectionOrder.start().catch(function (err) {
            return console.error(err.toString());
        });

        function toggleFillterContainer() {
            var container = document.getElementById("filterContainer");
            if (container.classList.contains('show')) {
                container.classList.remove('show');
                container.classList.remove('collapse');
                container.classList.add('collapsing');
            } else {
                container.classList.add('show');
                container.classList.add('collapse');
                container.classList.remove('collapsing');
            }
        }

        // Initialize Select2 Status
        $('#SelectedStatus').select2({
            templateResult: formatState1,
            templateSelection: formatState1
        });

        //custom select status
        function formatState1(state) {
            if (!state.id) {
                return state.text;
            }

            var $state = $(
                '<span class="' +
                (state.element.dataset.style === 'Canceled' ? 'badge bg-danger' :
                    state.element.dataset.style === 'Unconfirmed' ? 'badge bg-warning' :
                        state.element.dataset.style === 'Confirmed' ? "badge bg-primary" : "") +
                '">' + state.text + '</span>'
            );

            return $state;
        }


        // Initialize SelectedPayment
        $('#SelectedPayment').select2({
            templateResult: formatState2,
            templateSelection: formatState2
        });

        //custom SelectedPayment
        function formatState2(state) {
            if (!state.id) {
                return state.text;
            }

            var $state = $(
                '<span class="' +
                (state.element.dataset.style === 'Pending' ? 'badge bg-warning' :
                    state.element.dataset.style === 'Paid' ? 'badge bg-primary' : "") +
                '">' + state.text + '</span>'
            );

            return $state;
        }

        function Delete(element, url) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: url,
                        type: 'DELETE',
                        success: function (response) {

                            if (response.success === false) {
                                toastr.error(response.message);
                            } else {
                                // Use closest('tr') to find and remove the table row containing the delete button
                                $(element).closest('tr').remove();
                                toastr.success(response.message);
                            }
                        },
                        error: function (xhr, status, error) {
                            toastr.error('An error occurred: ' + xhr.statusText);
                        }
                    });
                }
            });
        }


        

    </script>
}